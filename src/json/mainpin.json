{
  "projects": [
    {
      "id": 1,
      "title": "DREAMLAND PARKING",
      "bg": "#EEC8FF",
      "color": "#050F1C",
      "pages": [
        {
          "title": "cover",
          "logo": "mp1-logo1",
          "img": "mp1-1",
          "description": "주차 현황과 주차 예약, 취소 기능을 구현한 React+Supabase 기반의 주차장 관리 서비스입니다.",
          "pageNumber": 1,
          "date": "2025.07.21 ~ 08.01 (총 8일 소요)",
          "ui_design": "Figma를 이용한 디자인 시스템 구축 후 코드 구현",
          "layout": "모바일, 데스크탑 반응형 설계",
          "type": "5인 Team Project 디자인 70%, 개발 50% 기여",
          "roles": [
            "와이어 프레임, 프로토타입 제작",
            "시작 페이지, 사이트 소개 페이지, 기본 레이아웃",
            "반응형 디자인",
            "주차 구역 혼잡도 기능 구현"
          ],
          "icons": [
            "Figma",
            "Ai",
            "Ps",
            "React",
            "Scss",
            "Supabase",
            "Git",
            "GitHub"
          ],
          "libraries": [
            "React-router",
            "React-icons",
            "React-calendar",
            "React-slick"
          ],
          "btnwrap": [
            {
              "text": "GITHUB URL",
              "link": "https://github.com/kimhyunseo/dreamland",
              "background": "#9B57BA",
              "color": "#ffffff"
            },
            {
              "text": "SITE URL",
              "link": "https://kimhyunseo.github.io/dreamland",
              "background": "#9B57BA",
              "color": "#ffffff"
            }
          ]
        },
        {
          "pageNumber": 2,
          "title": "OVERVIEW",
          "color": "#ffffff",
          "goal": "DreamLand Parking은 React와 Supabase를 연동해 주차장 예약 기능을 구현한 프로젝트입니다. 사용자가 구역을 선택해 실시간으로 예약·관리할 수 있도록 제작했으며 이를 통해 주차 가능 여부를 한눈에 확인할 수 있도록 하는 것을 목표로 했습니다.",
          "contribution": "5인 팀 프로젝트 중 디자인 70%, 개발 50%",
          "part": "ui ux 디자인 부분을 담당하여 Figma로 와이어프레임,프로토타입 제작 전체 ui 설계 및 레이아웃 구성을 주도하였습니다",
          "text": "담당 기능",
          "roles": [
            "기본 레이아웃(헤더/푸터/메뉴바 포함)과 페이지 전환 구조를 설계 및 구현하였습니다.",
            "로고 제작과 필요한 디자인 컴포넌트를 제작했습니다.",
            "날짜를 선택할 수 있는 예약 페이지를 React로 구현하였습니다.",
            "시작 화면 및 사이트 소개 페이지를 퍼블리싱했습니다.",
            "Supabase DB 연동하여 주차구역 혼잡도 표시 및 예약 기능 개발했습니다.",
            "데스크탑 버전 반응형 디자인을 담당했습니다."
          ],
          "img": "mp1-2"
        },
        {
          "pageNumber": 3,
          "title": "DESIGN SYSTEM",
          "color": "#EEC8FF",
          "logo": [
            "mp1-logo2",
            "mp1-logo3"
          ],
          "colors": [
            {
              "name": "Primary",
              "value": "#BD6CE3"
            },
            {
              "name": "Sub-color",
              "value": "#DCD5E8"
            },
            {
              "name": "Secondary",
              "value": "#FFF098"
            },
            {
              "name": "Font-color",
              "value": "#2B2D42"
            },
            {
              "name": "Gray",
              "value": "#BAB6C3"
            },
            {
              "name": "Light-gray",
              "value": "#EFEFEF"
            }
          ],
          "typography": [
            {
              "type": "headline_1",
              "text": "Headline 1",
              "size": "32px",
              "font_family": "Pretendard"
            },
            {
              "type": "headline_2",
              "text": "Headline 2",
              "size": "24px",
              "font_family": "Pretendard"
            },
            {
              "type": "headline_3",
              "text": "Headline 3",
              "size": "20px",
              "font_family": "Pretendard"
            },
            {
              "type": "body_1",
              "text": "body 1",
              "size": "16px",
              "font_family": "Pretendard"
            },
            {
              "type": "body_2",
              "text": "body 2",
              "size": "14px",
              "font_family": "Pretendard"
            },
            {
              "type": "caption",
              "text": "caption",
              "size": "10px",
              "font_family": "Pretendard"
            }
          ],
          "components": "mp1-3"
        },
        {
          "pageNumber": 4,
          "title": "user flow",
          "img": "mp1-4"
        },
        {
          "pageNumber": 5,
          "title": "반응형 디자인",
          "img": "mp1-5"
        },
        {
          "pageNumber": 6,
          "title": "Retrospective",
          "problem": "Git을 활용한 협업 과정에서 가장 어려웠던 점은 **같은 파일을 수정했을 때 발생하는 충돌**이었습니다. 처음에는 단순히 각자 브랜치에 작업한 뒤 푸시하면 될 것이라 생각했지만, 코드가 꼬이거나 기능이 사라지는 문제가 반복되었습니다.",
          "solutions": "이후 팀원들과 **작업 상황을 자주 공유**하며 소통했고 **upstream**을 활용해 메인 브랜치의 최신 변경 사항을 주기적으로 병합해 충돌 가능성을 줄였습니다. 또한 충돌이 발생하면 팀원들과 **원인을 함께 분석**하고 변경 내역을 비교하며 해결했는데 이 과정에서 **Git 명령어와 버전 관리에 대한 이해도**가 크게 높아졌습니다.",
          "refactoting": "이러한 방식으로 협업하니 충돌 발생이 현저히 줄었고 프로젝트 진행도 한결 안정적이었습니다. 이번 경험을 통해 협업에서는 **사전 규칙 설정, 주기적인 코드 동기화** 그리고 **원활한 소통**이 얼마나 중요한지 깨달았습니다."
        }
      ]
    },
    {
      "id": 2,
      "title": "Ririm",
      "bg": "#DCEEF2",
      "color": "#050F1C",
      "bgimg": "mp2-bg",
      "pages": [
        {
          "title": "cover",
          "logo": "mp2-logo1",
          "description": "상품 목록·상세까지 구하고 장바구니 기능에 중점을 두어 사용자 편의성을 강화한 반응형 쇼핑몰 웹사이트입니다.",
          "pageNumber": 1,
          "date": "2025.07.07 ~ 07.11 (총 5일 소요)",
          "ui_design": "Figma를 이용한 디자인 시스템 구축 후 코드 구현",
          "img": "mp2-1",
          "layout": "모바일, 데스크탑 반응형 설계",
          "type": "5인 Team Project 디자인 70% 개발 60% 기여",
          "roles": [
            "주요 페이지 제작",
            "장바구니,북마크,검색 기능 구현 ",
            "반응형 디자인, 디자인 컴포넌트 구축"
          ],
          "icons": [
            "Figma",
            "Ps",
            "React",
            "Scss",
            "Git",
            "GitHub"
          ],
          "libraries": [
            "React-router",
            "React-icons"
          ],
          "btnwrap": [
            {
              "text": "GITHUB URL",
              "link": "https://github.com/kimhyunseo/Ririm/tree/main",
              "background": "#3759B4",
              "color": "#ffffff"
            },
            {
              "text": "SITE URL",
              "link": "https://kimhyunseo.github.io/Ririm",
              "background": "#3759B4",
              "color": "#ffffff"
            }
          ]
        },
        {
          "pageNumber": 2,
          "title": "OVERVIEW",
          "color": "#6495ED",
          "goal": "Ririm의 목표는 상품 정보를 JSON 파일로 직접 만들고 React의 상태 관리와 컴포넌트 구조를 사용해 상품 목록, 상세 페이지, 장바구니까지 이어지는 실제 쇼핑몰 기능을 완성하는 것이었습니다. 단순히 화면만 보여주는 것이 아니라 데이터가 실제로 연결되어 작동하도록 만드는 데 중점을 뒀습니다.",
          "contribution": "5인 팀 프로젝트 중 디자인 70%, 개발 60%",
          "part": "팀장을 맡아 전체 프로젝트 일정 수립 및 팀원 역할을 분배하고, 팀 간 커뮤니케이션 도구(Slack)을 활용해 효율적인 협업을 도왔습니다.",
          "text": "담당 기능",
          "roles": [
            "기본 레이아웃(헤더/푸터/메뉴바 포함)과 페이지 전환 구조를 설계 및 구현하였습니다.",
            "시작 페이지 및 상품 상세 페이지, 장바구니 페이지, 검색 페이지를 퍼블리싱했습니다.",
            "장바구니와 북마크, 검색 기능을 개발했습니다.",
            "다양한 화면 크기에 맞게 반응형으로 제작하였습니다."
          ],
          "img": "mp2-2"
        },
        {
          "pageNumber": 3,
          "title": "DESIGN SYSTEM",
          "logo": "mp2-logo1",
          "color": "#6495ED",
          "colors": [
            {
              "name": "Primary",
              "value": "#6495ED"
            },
            {
              "name": "Secondry",
              "value": "#3759B4"
            },
            {
              "name": "Sub-color",
              "value": "#DCEEF2"
            },
            {
              "name": "Font-color",
              "value": "#222222"
            },
            {
              "name": "Gray",
              "value": "#666666"
            },
            {
              "name": "Light-gray",
              "value": "#C2C8D2"
            }
          ],
          "typography": [
            {
              "type": "headline_1",
              "text": "Headline 1",
              "size": "32px",
              "font_family": "Gowun Batang"
            },
            {
              "type": "headline_2",
              "text": "Headline 2",
              "size": "24px",
              "font_family": "Gowun Batang"
            },
            {
              "type": "headline_3",
              "text": "Headline 3",
              "size": "20px",
              "font_family": "Gowun Batang"
            },
            {
              "type": "body_1",
              "text": "body 1",
              "size": "16px",
              "font_family": "Gowun Batang"
            },
            {
              "type": "body_2",
              "text": "body 2",
              "size": "14px",
              "font_family": "Gowun Batang"
            },
            {
              "type": "caption",
              "text": "caption",
              "size": "10px",
              "font_family": "Gowun Batang"
            }
          ]
        },
        {
          "pageNumber": 4,
          "title": "반응형 디자인",
          "img": "mp2-3"
        },
        {
          "pageNumber": 5,
          "title": "Retrospective",
          "problem": "Ririm 쇼핑몰 프로젝트에서 장바구니 기능을 구현하며 컴포넌트 간 데이터를 주고받는 방법과 구조 설계에 어려움을 겪었습니다. 특히 여러 컴포넌트가 같은 상태를 공유해야 할 때, 어떤 컴포넌트를 **useState**로 상태를 관리하고 **useEffect**를 이용해 **상태 변화**를 처리할지 고민하는 시간이 많았습니다. 초반에는 상태 관리가 분산되고 **props** 전달이 꼬이면서 데이터 흐름이 혼란스러운 경우도 있었습니다.",
          "solutions": "이를 해결하기 위해 각 컴포넌트의 역할과 책임을 명확히 정의하고, 상위 컴포넌트에서 useState로 상태를 집중 관리하며 하위 컴포넌트에는 props로 데이터를 전달하는 방식을 적용했습니다.",
          "refactoting": "이 구조 덕분에 데이터 흐름이 한눈에 들어오고, **코드의 유지 보수성**과 **가독성**이 크게 좋아졌습니다. 또한 컴포넌트 역할 분담이 명확해지면서 협업 시 혼선이 줄어들어 **개발 효율**도 높아졌습니다."
        }
      ]
    },
    {
      "id": 3,
      "title": "적어봐요 끝말잇기의 숲",
      "bg": "#F9F7EF",
      "color": "#050F1C",
      "bgimg": "mp3-bg",
      "pages": [
        {
          "title": "cover",
          "logo": "mp3-logo1",
          "img": "mp3-1",
          "description": "사용자가 입력한 단어의 끝 글자를 기준으로 우리말샘 API에서 다음 단어를 찾아 자동 응답하는 끝말잇기 게임입니다.",
          "pageNumber": 1,
          "date": "22025.05.21 ~ 05.23 (총 3일 소요)",
          "ui_design": "Figma를 이용한 디자인 시스템 구축 후 코드 구현",
          "layout": "Flex를 기반으로 모바일 전용 레이아웃 제작",
          "type": "100% Personal Project",
          "icons": [
            "Ai",
            "Ps",
            "React",
            "Scss"
          ],
          "libraries": [
            "React-router"
          ],
          "btnwrap": [
            {
              "text": "GITHUB URL",
              "link": "https://github.com/kimhyunseo/endword",
              "background": "#FEEC9E",
              "color": "#4D554A"
            },
            {
              "text": "SITE URL",
              "link": "https://kimhyunseo.github.io/endword/",
              "background": "#FEEC9E",
              "color": "#4D554A"
            }
          ]
        },
        {
          "pageNumber": 2,
          "title": "OVERVIEW",
          "goal": "사용자가 입력한 단어의 마지막 글자를 기준으로 우리말샘 API를 호출해 자동으로 다음 단어를 제시하는 끝말잇기 게임을 구현하는 것이 목표였습니다. React의 상태 관리와 비동기 API 연동 로직을 직접 적용해, 게임이 끊기지 않고 자연스럽게 진행되도록 만드는 데 중점을 두었습니다.",
          "contribution": "100% 개인 프로젝트",
          "color": "#87CED7",
          "text": "기능",
          "roles": [
            "입력한 단어의 끝 글자를 추출하여 우리말샘 API에서 해당 글자로 시작하는 단어를 자동으로 제시합니다.",
            "잘못된 입력(글자 불일치) 시에는 알림을 표시하여 규칙을 안내합니다.",
            "단어 목록이 변경될 때 자동으로 스크롤이 이동하도록 구현하여 게임 흐름이 끊기지 않도록 했습니다."
          ],
          "img": "mp3-2"
        },
        {
          "pageNumber": 3,
          "title": "Retrospective",
          "problem": "끝말잇기 게임을 만들면서 가장 어려웠던 점은 예상치 못한 **API 응답을 처리하는 부분**이었습니다. 우리말샘 API에서 단어가 없거나, 의미와 관계없는 단어가 반환되는 경우가 있었는데 초반에는 이런 응답을 그대로 게임에 사용하다 보니 게임이 멈추거나 흐름이 끊기는 문제가 발생했습니다.",
          "solutions": "이 문제를 해결하기 위해 먼저 **API 응답값을 검증하는 로직**을 추가했습니다. 유효하지 않은 단어는 걸러내고 사용자에게 알림을 띄워 직접 입력할 수 있도록 했습니다. 이로 인해 **사용자 경험이 자연스럽고 안정적**으로 유지되었습니다. ",
          "refactoting": "이 경험을 통해 단순한 기능 구현을 넘어서, 예외 상황을 고려한 **안정적인 UX 설계**와 **유지보수가 쉬운 구조**가 얼마나 중요한지 배울 수 있었습니다."
        }
      ]
    },
    {
      "id": 4,
      "title": "야구 QUIZ",
      "bg": "#A5BEB0",
      "color": "#050F1C",
      "bgimg": "mp4-bg",
      "pages": [
        {
          "title": "cover",
          "logo": "mp4-logo1",
          "img": "mp4-1",
          "description": "JSON 데이터를 활용해 4지선다형 문제를 출제하고, React 상태 관리를 통해 정답 체크와 점수 계산이 가능한 모바일 퀴즈 앱입니다.",
          "pageNumber": 1,
          "date": "2025.06.15 ~ 06.16 (총 2일 소요)",
          "ui_design": "별도 디자인 없이 바로 코드 구현",
          "layout": "Flex를 기반으로 모바일 전용 레이아웃 제작",
          "type": "100% Personal Project",
          "icons": [
            "Ai",
            "Ps",
            "React",
            "Scss"
          ],
          "libraries": [
            "React-router"
          ],
          "btnwrap": [
            {
              "text": "GITHUB URL",
              "link": "https://github.com/kimhyunseo/quiz",
              "background": "#3759B4",
              "color": "#DCEEF2"
            },
            {
              "text": "SITE URL",
              "link": "https://kimhyunseo.github.io/quiz",
              "background": "#3759B4",
              "color": "#DCEEF2"
            }
          ]
        },
        {
          "pageNumber": 2,
          "title": "OVERVIEW",
          "goal": "야구 퀴즈 게임은 야구 지식을 테스트하고 학습할 수 있는 인터랙티브한 게임을 제공하는 것이 목표입니다. React와 JSON 데이터 연동을 직접 구현해 상태 관리와 데이터 처리 경험을 쌓는 데 중점을 두었습니다.",
          "contribution": "100% 개인 프로젝트",
          "text": "기능",
          "color": "#0268B0",
          "roles": [
            "JSON으로 문제와 정답을 관리했습니다.",
            "React 컴포넌트로 UI를 구현했습니다.",
            "카테고리 선택 기능으로 문제를 다양하게 출제할 수 있습니다.",
            "4지선다 객관식과 정답 확인, 점수 집계를 만들었습니다.",
            "Supabase DB 연동하여 주차구역 혼잡도 표시 및 예약 기능 개발했습니다.",
            "데스크탑 버전 반응형 디자인을 담당했습니다."
          ],
          "img": "mp4-2"
        },
        {
          "pageNumber": 3,
          "title": "Retrospective",
          "problem": "야구 퀴즈 게임을 제작하면서 상태에 따라 정답, 선택한 보기, 틀린 보기에 각각 **다른 클래스를 적용**하는 작업이 가장 어려웠습니다. 처음에는 여러 조건을 한꺼번에 처리하다 보니 스타일이 제대로 적용되지 않고 컴포넌트가 복잡해지는 문제도 있었습니다.",
          "solutions": "여러 차례 시도하면서 **화살표 함수**와 **if문**을 효과적으로 사용하는 방법을 익히게 되었고 **상태 관리**와 **조건부 렌더링**에 대한 이해도 깊어졌습니다. ",
          "refactoting": "이를 통해 React 컴포넌트에서 **동적인 스타일링**과 **상태 기반 UI 구성**을 능숙하게 처리할 수 있게 되었습니다."
        }
      ]
    },
    {
      "id": 5,
      "title": "NEON BLAZE",
      "bg": "#1A0026",
      "color": "#FFFFFF",
      "pages": [
        {
          "line": "#ffffff",
          "title": "cover",
          "logo": "mp5-logo1",
          "img": "mp5-1",
          "description": "야구 구단 소개 페이지를 HTML과 CSS로 직접 기획하고 제작한 정적 웹사이트입니다. 간결한 디자인과 웹 표준을 적용해 다양한 환경에서 작동하도록 구현하였습니다.",
          "pageNumber": 1,
          "date": "2025.05.01 ~ 05.02 (총 2일 소요)",
          "ui_design": "Figma를 이용한 디자인 시스템 구축 후 코드 구현",
          "layout": "Flex를 기반으로 카드 형태의 레이아웃 제작",
          "type": "100% Personal Project",
          "icons": [
            "Figma",
            "Ai",
            "Ps",
            "html",
            "Css"
          ],
          "btnwrap": [
            {
              "text": "GITHUB URL",
              "link": "https://github.com/kimhyunseo/neon-blaze",
              "background": "#FAAC19",
              "color": "#D32179"
            },
            {
              "text": "SITE URL",
              "link": "https://kimhyunseo.github.io/neon-blaze/index.html",
              "background": "#FAAC19",
              "color": "#D32179"
            }
          ]
        },
        {
          "pageNumber": 2,
          "title": "OVERVIEW",
          "line": "#ffffff",
          "goal": "Neon Blaze는 Figma에서 디자인한 화면을 HTML과 CSS를 사용해 정확하고 깔끔하게 구현하는 것이었습니다. 이를 통해 디자인 시안과 실제 웹 페이지 간 일관성을 유지하고 웹 표준에 맞는 구조로 제작하는 데 중점을 두었습니다.",
          "contribution": "100% 개인 프로젝트",
          "part": "ui ux 디자인 부분을 담당하여 Figma로 와이어프레임,프로토타입 제작 전체 ui 설계 및 레이아웃 구성을 주도하였습니다",
          "text": "담당 기능",
          "color": "#D32179",
          "roles": [
            "Figma 디자인을 기반으로 HTML과 CSS로 정적인 페이지를 구현하였습니다.",
            "Flex를 활용해 레이아웃을 구성했습니다.",
            "다양한 화면 크기에 맞게 반응형으로 제작하였습니다.",
            "헤더와 푸터를 포함한 레이아웃을 구성하였습니다."
          ],
          "img": "mp5-2"
        },
        {
          "pageNumber": 5,
          "title": "반응형 디자인",
          "line": "#ffffff",
          "img": "mp5-3"
        },
        {
          "pageNumber": 6,
          "title": "Retrospective",
          "line": "#ffffff",
          "problem": "네온 블레이즈 프로젝트를 진행하며 가장 어려웠던 점은 단일 페이지 내에서 다양한 이미지와 텍스트를 조화롭게 배치하는 것이었습니다. 처음에는 각 요소들이 서로 겹치거나 불균형하게 배치되어 디자인이 산만해 보였습니다.",
          "solutions": "이를 해결하기 위해 CSS의 **Flex**와 **Grid 레이아웃**을 적극 활용해 요소들의 위치와 크기를 체계적으로 조절했고 적절한 여백과 정렬을 적용해 사용자에게 편안한 시각 경험을 제공할 수 있었습니다. ",
          "refactoting": "이를 통해 웹 레이아웃 구성에 대한 이해도가 높아졌고, 다양한 화면 환경에서도 일관된 디자인을 유지하는 방법을 배울 수 있었습니다."
        }
      ]
    },
    {
      "id": 6,
      "title": "하루 1루",
      "bg": "#F4705C",
      "color": "#050F1C",
      "pages": [
        {
          "title": "cover",
          "logo": "mp6-logo1",
          "img": "mp6-1",
          "description": "사용자의 편리한 이용을 목표로 실제 사용자 요구를 바탕으로 설계한 모바일 앱 UI/UX 디자인 작업해 와이어프레임부터 프로토타입까지 체계적으로 제작하였습니다.",
          "pageNumber": 1,
          "date": "2025.04.09 ~ 04.10 (총 2일 소요)",
          "ui_design": "Figma를 이용한 디자인 시스템 구축 후 코드 구현",
          "layout": "모바일 전용 레이아웃 제작",
          "type": "100% Personal Project",
          "icons": [
            "Figma"
          ]
        },
        {
          "pageNumber": 2,
          "title": "OVERVIEW",
          "goal": "하루1루 프로젝트는 사용자 리서치부터 와이어프레임, UI 설계, 프로토타입 제작까지 Figma를 활용해 체계적으로 진행하였습니다. 사용자 경험을 최우선으로 고려하여 직관적이고 효율적인 인터페이스를 설계하는 데 중점을 두었습니다.",
          "contribution": "100% 개인 프로젝트",
          "text": "기능",
          "color": "#FEF1EF",
          "roles": [
            "페르소나 분석을 통해 사용자 요구를 파악했습니다.",
            "분석한 페르소나를 바탕으로 디자인 시스템을 구축했습니다.",
            "Figma의 컴포넌트 기능을 활용해 일관된 UI 요소를 설계했습니다.",
            "사용자 편의를 고려한 효율적인 화면 구성을 구현했습니다."
          ],
          "img": "mp6-2"
        },
        {
          "pageNumber": 3,
          "title": "DESIGN SYSTEM",
          "color": "#F4705C",
          "logo": [
            "mp6-logo2"
          ],
          "colors": [
            {
              "name": "Primary",
              "value": "#F4705C"
            },
            {
              "name": "Light",
              "value": "#FEF1EF"
            },
            {
              "name": "Dark",
              "value": "#B75445"
            },
            {
              "name": "Font-color",
              "value": "#000000"
            },
            {
              "name": "Gray",
              "value": "#BABABA"
            },
            {
              "name": "Light-gray",
              "value": "#D9D9D9"
            }
          ],
          "typography": [
            {
              "type": "headline_1",
              "text": "Headline 1",
              "size": "30px",
              "font_family": "Pretendard"
            },
            {
              "type": "headline_2",
              "text": "Headline 2",
              "size": "25px",
              "font_family": "Pretendard"
            },
            {
              "type": "headline_3",
              "text": "Headline 3",
              "size": "20px",
              "font_family": "Pretendard"
            },
            {
              "type": "body_1",
              "text": "body 1",
              "size": "16px",
              "font_family": "Pretendard"
            },
            {
              "type": "body_2",
              "text": "body 2",
              "size": "14px",
              "font_family": "Pretendard"
            },
            {
              "type": "caption",
              "text": "caption",
              "size": "10px",
              "font_family": "Pretendard"
            }
          ],
          "components": "mp6-3"
        },
        {
          "pageNumber": 6,
          "title": "Retrospective",
          "problem": "실제 사용자가 없는 가상의 페르소나를 기반으로 UX를 설계하다 보니 **사용자 니즈를 구체화**하고 시나리오를 설득력 있게 구성하는 데 어려움이 있었습니다. 또한 개인 프로젝트 특성상 모든 기획과 디자인을 혼자서 결정해야 했기 때문에 판단의 객관성을 유지하는 데 부담이 있었습니다.",
          "solutions": "비슷한 목적의 기존 앱을 리서치하고, **사용자 리뷰**와 **사용 흐름**을 분석해 가상의 사용자가 겪을 문제를 최대한 현실감 있게 구성하려고 했습니다. 또한 피그마의 **컴포넌트**와 **오토 레이아웃** 기능을 적극적으로 활용해 일관된 구조와 효율적인 디자인 시스템을 구성했습니다. ",
          "refactoting": "실제 사용자가 없는 상황에서도 **사용자 중심 사고**로 문제를 정의하고 구조화하는 연습이 되었습니다. 또한 Figma를 활용한 디자인 시스템 구성에 대한 이해도가 높아졌습니다."
        }
      ]
    }
  ]
}